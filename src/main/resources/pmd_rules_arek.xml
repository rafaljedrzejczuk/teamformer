<?xml version="1.0"?>
<ruleset name="Pegasus PMD Tests Warnings" xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

        <description>
                PMD rules that cause warnings in Pegasus test features builds
        </description>
    
        <!-- junit.xml, JUnit Rules -->
        <rule ref="rulesets/junit.xml/JUnitStaticSuite">
                <priority>5</priority>
        </rule>
        <rule ref="rulesets/junit.xml/UnnecessaryBooleanAssertion">
                <priority>5</priority>
        </rule>
        <rule ref="rulesets/junit.xml/SimplifyBooleanAssertion">
                <priority>5</priority>
        </rule>

        <!-- migration.xml, Migration Rules -->
        <rule ref="rulesets/migrating.xml/JUnit4TestShouldUseBeforeAnnotation">
                <priority>5</priority>
        </rule>
        <rule ref="rulesets/migrating.xml/JUnit4TestShouldUseAfterAnnotation">
                <priority>5</priority>
        </rule>
        <rule ref="rulesets/migrating.xml/JUnit4TestShouldUseTestAnnotation">
                <priority>5</priority>
        </rule>
        <rule ref="rulesets/migrating.xml/JUnit4SuitesShouldUseSuiteAnnotation">
                <priority>5</priority>
        </rule>

        <!-- FROM PMD-ERRORS.xml -->

        <!-- basic.xml, Basic Rules -->
        <rule ref="rulesets/basic.xml/EmptyWhileStmt">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/EmptyTryBlock">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/EmptyFinallyBlock">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/EmptySwitchStatements">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/OverrideBothEqualsAndHashcode">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/ReturnFromFinallyBlock">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/EmptySynchronizedBlock">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/EmptyStaticInitializer">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/UnconditionalIfStatement">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/BooleanInstantiation">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/ClassCastExceptionWithToArray">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/UselessOperationOnImmutable">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/MisplacedNullCheck">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/BrokenNullCheck">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/AvoidMultipleUnaryOperators">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/basic.xml/EmptyInitializer">
                <priority>1</priority>
        </rule>
        <!-- Eclipse plugin cannot load this rule: rule ref="rulesets/basic.xml/DontCallThreadRun"><priority>1</priority></rule-->

        <!-- braces.xml, Braces Rules -->

        <!-- clone.xml, Clone Implementation Rules -->

        <!-- codesize.xml, Code Size Rules -->

        <!-- controversial.xml, Controversial Rules -->

        <!-- coupling.xml, Coupling Rules -->

        <!-- design.xml, Design Rules -->
        <rule ref="rulesets/design.xml/EqualsNull">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/design.xml/IdempotentOperations">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/design.xml/PreserveStackTrace">
                <priority>1</priority>
        </rule>

        <!-- finalizers.xml, Finalizer Rules -->
        <rule ref="rulesets/finalizers.xml/AvoidCallingFinalize">
                <priority>1</priority>
        </rule>

        <!-- imports.xml, Import Statement Rules -->
        <rule ref="rulesets/imports.xml/UnusedImports">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/imports.xml/ImportFromSamePackage">
                <priority>1</priority>
        </rule>

        <!-- junit.xml, JUnit Rules -->

        <!-- logging-java.xml, Java Logging Rules -->
        <rule ref="rulesets/logging-java.xml/SystemPrintln">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/logging-java.xml/AvoidPrintStackTrace">
                <priority>1</priority>
        </rule>

        <!-- migrating.xml, Migration Rules -->
        <rule ref="rulesets/migrating.xml/IntegerInstantiation">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/migrating.xml/ByteInstantiation">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/migrating.xml/ShortInstantiation">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/migrating.xml/LongInstantiation">
                <priority>1</priority>
        </rule>

        <!-- naming.xml, Naming Rules -->
        <rule ref="rulesets/naming.xml/SuspiciousHashcodeMethodName">
                <priority>1</priority>
        </rule>

        <!-- optimizations.xml, Optimization Rules -->

        <!-- strictexception.xml, Strict Exception Rules -->
        <rule ref="rulesets/strictexception.xml/AvoidThrowingNewInstanceOfSameException">
                <priority>1</priority>
        </rule>

        <!-- strings.xml, String and StringBuffer Rules -->
        <rule ref="rulesets/strings.xml/StringInstantiation">
                <priority>1</priority>
        </rule>

        <!-- sunsecure.xml, Security Code Guidelines -->

        <!-- typeresolution.xml, Type Resolution Rules -->

        <!-- unusedcode.xml, Unused Code Rules -->
        <rule ref="rulesets/unusedcode.xml/UnusedPrivateField">
                <priority>1</priority>
        </rule>

        <!-- Pegasus Custom Rule, UseCorrectPegasusExceptionLogging -->
        <rule name="UseCorrectPegasusExceptionLogging" since="1.0" class="net.sourceforge.pmd.rules.XPathRule"
          message="Use the correct pegasus services logging statement with two arguments for logging exceptions.">
                <description>
<![CDATA[
To make sure the full stacktrace is printed out, use the Pegasus services logging statement with 2 arguments: a String and a Throwable.
]]>
                </description>
                <priority>3</priority>
                <properties>
                        <property name="xpath">
                                <value>
<![CDATA[
//CatchStatement/Block[count(.//StatementExpression
/PrimaryExpression[PrimaryPrefix/Name[starts-with(@Image,
concat(ancestor::ClassOrInterfaceDeclaration/ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/FieldDeclaration
[Type//ClassOrInterfaceType[@Image='ILogger2'or@Image='ILogger']]
/VariableDeclarator/VariableDeclaratorId/@Image, '.'))]]
[PrimarySuffix/Arguments[@ArgumentCount='2']]
[PrimarySuffix/Arguments//Name/@Image = ancestor::CatchStatement/FormalParameter/VariableDeclaratorId/@Image])=0][count(.//BlockStatement/Statement/StatementExpression
/PrimaryExpression[PrimaryPrefix/Name[starts-with(@Image,
concat(ancestor::ClassOrInterfaceDeclaration/ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/FieldDeclaration
[Type//ClassOrInterfaceType[@Image='ILogger2'or@Image='ILogger']]
/VariableDeclarator/VariableDeclaratorId/@Image, '.'))]])]
]]>
                                </value>
                        </property>
                </properties>
                <example>
<![CDATA[
public class Main {
    private static final ILogger2 LOGGER = ServiceLoggerFactory.getLogger2(Main.class );
    void bar() {
        try {
            // something here...
        }
        catch (BadException1 be1) {
            LOGGER.error(be1); // Wrong!
        }
        catch (BadException2 be2) {
            LOGGER.error(be2.getMessage()); // Wrong!
        }
        catch (BadException3 be3) {
            LOGGER.error("Exception message!"); // Wrong!
        }
        catch (OtherException1 oe1) {
            LOGGER.error(oe.getMessage(), oe1); // Correct
        }
        catch (OtherException2 oe2) {
            LOGGER.error("Exception message!", oe2); // Correct
        }
    }
}
]]>
                </example>
        </rule>

        <!-- FROM PMD-WARNINGS.xml -->
	
        <!-- basic.xml, Basic Rules -->
        <rule ref="rulesets/basic.xml/EmptyIfStmt">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/basic.xml/JumbledIncrementer">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/basic.xml/UnnecessaryConversionTemporary">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/basic.xml/DoubleCheckedLocking">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/basic.xml/UnnecessaryReturn">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/basic.xml/EmptyStatementNotInLoop">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/basic.xml/UnnecessaryFinalModifier">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/basic.xml/CollapsibleIfStatements">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/basic.xml/UnusedNullCheckInEquals">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/basic.xml/BigIntegerInstantiation">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/basic.xml/AvoidUsingOctalValues">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/basic.xml/CheckResultSet">
                <priority>4</priority>
        </rule>

        <!-- braces.xml, Braces Rules -->
        <!--
            <rule ref="rulesets/braces.xml/IfStmtsMustUseBraces"><priority>3</priority></rule>
            <rule ref="rulesets/braces.xml/WhileLoopsMustUseBraces"><priority>3</priority></rule>
            <rule ref="rulesets/braces.xml/IfElseStmtsMustUseBraces"><priority>3</priority></rule>
            <rule ref="rulesets/braces.xml/ForLoopsMustUseBraces"><priority>3</priority></rule>
        -->
        <!-- clone.xml, Clone Implementation Rules -->
        <rule ref="rulesets/clone.xml/ProperCloneImplementation">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/clone.xml/CloneThrowsCloneNotSupportedException">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/clone.xml/CloneMethodMustImplementCloneable">
                <priority>3</priority>
        </rule>

        <!-- codesize.xml, Code Size Rules -->
        <rule ref="rulesets/codesize.xml/NPathComplexity">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/codesize.xml/ExcessiveMethodLength">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/codesize.xml/ExcessiveParameterList">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/codesize.xml/CyclomaticComplexity">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/codesize.xml/ExcessivePublicCount">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/codesize.xml/NcssMethodCount">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/codesize.xml/NcssTypeCount">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/codesize.xml/NcssConstructorCount">
                <priority>3</priority>
        </rule>

        <!-- controversial.xml, Controversial Rules -->
        <rule ref="rulesets/controversial.xml/UnnecessaryConstructor">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/controversial.xml/UnusedModifier">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/controversial.xml/AssignmentInOperand">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/controversial.xml/DontImportSun">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/controversial.xml/SuspiciousOctalEscape">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/controversial.xml/CallSuperInConstructor">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/controversial.xml/UnnecessaryParentheses">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/controversial.xml/AvoidUsingShortType">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/controversial.xml/DoNotCallGarbageCollectionExplicitly">
                <priority>1</priority>
        </rule>
        <!-- Eclipse plugin cannot load this rule: rule ref="rulesets/controversial.xml/UseConcurrentHashMap"><priority>3</priority></rule-->

        <!-- coupling.xml, Coupling Rules -->
        <rule ref="rulesets/coupling.xml/CouplingBetweenObjects">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/coupling.xml/LooseCoupling">
                <priority>1</priority>
        </rule>

        <!-- design.xml, Design Rules -->
        <rule ref="rulesets/design.xml/UseSingleton">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/design.xml/SimplifyBooleanReturns">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/design.xml/SimplifyBooleanExpressions">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/design.xml/SwitchStmtsShouldHaveDefault">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/AvoidDeeplyNestedIfStmts">
                <priority>2</priority>
                <properties>
                        <property name="problemDepth" value="4" />
                </properties>
        </rule>
        <rule ref="rulesets/design.xml/AvoidReassigningParameters">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/design.xml/ConstructorCallsOverridableMethod">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/design.xml/AccessorClassGeneration">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/FinalFieldCouldBeStatic">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/CloseResource">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/NonStaticInitializer">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/DefaultLabelNotLastInSwitchStmt">
                <priority>4</priority>
        </rule>
        <rule ref="rulesets/design.xml/NonCaseLabelInSwitchStatement">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/OptimizableToArrayCall">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/design.xml/InstantiationToGetClass">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/AvoidProtectedFieldInFinalClass">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/design.xml/AssignmentToNonFinalStatic">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/MissingStaticMethodInNonInstantiatableClass">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/design.xml/UseNotifyAllInsteadOfNotify">
                <priority>4</priority>
        </rule>
        <rule ref="rulesets/design.xml/PositionLiteralsFirstInComparisons">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/design.xml/UnnecessaryLocalBeforeReturn">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/NonThreadSafeSingleton">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/design.xml/AvoidSynchronizedAtMethodLevel">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/UncommentedEmptyMethod">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/UncommentedEmptyConstructor">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/UseCollectionIsEmpty">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/SingularField">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/design.xml/ReturnEmptyArrayRatherThanNull">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/design.xml/AbstractClassWithoutAnyMethod">
                <priority>3</priority>
        </rule>

        <!-- finalizers.xml, Finalizer Rules -->

        <!-- imports.xml, Import Statement Rules -->

        <!-- logging-java.xml, Java Logging Rules -->

        <!-- migrating.xml, Migration Rules -->

        <!-- naming.xml, Naming Rules -->
        <rule ref="rulesets/naming.xml/VariableNamingConventions">
                <priority>1</priority>
                <properties>
                        <property name="staticPrefix" value="_" />
                        <property name="memberPrefix" value="_" />
                </properties>
        </rule>
        <rule ref="rulesets/naming.xml/MethodNamingConventions">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/naming.xml/ClassNamingConventions">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/naming.xml/AbstractNaming">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/naming.xml/MethodWithSameNameAsEnclosingClass">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/naming.xml/SuspiciousConstantFieldName">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/naming.xml/SuspiciousEqualsMethodName">
                <priority>1</priority>
        </rule>

        <!-- optimizations.xml, Optimization Rules -->
        <rule ref="rulesets/optimizations.xml/UseStringBufferForStringAppends">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/optimizations.xml/UseArraysAsList">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/optimizations.xml/AvoidArrayLoops">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/optimizations.xml/UnnecessaryWrapperObjectCreation">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/optimizations.xml/AddEmptyString">
                <priority>3</priority>
        </rule>

        <!-- strictexception.xml, Strict Exception Rules -->
        <rule ref="rulesets/strictexception.xml/AvoidCatchingThrowable">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/strictexception.xml/AvoidThrowingNullPointerException">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/strictexception.xml/AvoidRethrowingException">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/strictexception.xml/DoNotExtendJavaLangError">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/strictexception.xml/DoNotThrowExceptionInFinally">
                <priority>3</priority>
        </rule>
        <!-- Eclipse plugin cannot load this rule: rule ref="rulesets/strictexception.xml/AvoidLosingExceptionInformation"><priority>1</priority></rule-->

        <!-- strings.xml, String and StringBuffer Rules -->
        <rule ref="rulesets/strings.xml/StringToString">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/strings.xml/InefficientStringBuffering">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/strings.xml/UnnecessaryCaseChange">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/strings.xml/UseStringBufferLength">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/strings.xml/AppendCharacterWithChar">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/strings.xml/ConsecutiveLiteralAppends">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/strings.xml/UseIndexOfChar">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/strings.xml/UselessStringValueOf">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/strings.xml/UseEqualsToCompareStrings">
                <priority>2</priority>
        </rule>
        <rule ref="rulesets/strings.xml/AvoidStringBufferField">
                <priority>3</priority>
        </rule>
        <rule ref="rulesets/strings.xml/StringBufferInstantiationWithChar">
                <priority>1</priority>
        </rule>

        <!-- sunsecure.xml, Security Code Guidelines -->

        <!-- typeresolution.xml, Type Resolution Rules -->

        <!-- unusedcode.xml, Unused Code Rules -->
        <rule ref="rulesets/unusedcode.xml/UnusedPrivateMethod">
                <priority>1</priority>
        </rule>
        <rule ref="rulesets/unusedcode.xml/UnusedLocalVariable">
                <priority>1</priority>
        </rule>

        <!-- Pegasus Custom Rule, AvoidStringBuilderField (copied from AvoidStringBufferField) -->
        <rule name="AvoidStringBuilderField" since="1.0" class="net.sourceforge.pmd.rules.XPathRule"
          message="StringBuilders can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).">
                <description>
<![CDATA[
StringBuilders can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
]]>
                </description>
                <priority>3</priority>
                <properties>
                        <property name="xpath">
                                <value>
<![CDATA[
//FieldDeclaration/Type/ReferenceType/ClassOrInterfaceType[@Image = 'StringBuilder']
]]>
                                </value>
                        </property>
                </properties>
                <example>
<![CDATA[
class Foo {
    private StringBuilder memoryLeak;
}
]]>
                </example>
        </rule>

</ruleset>
